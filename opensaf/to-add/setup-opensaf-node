#!/bin/bash
# Setup node_type, node_name
# immnd.conf: PBE and rootdir
# dtmd.conf: DTM IP

function config_immnd {
    if [ -f /etc/opensaf/.setup-opensaf-node ]; then
        echo "EXIT"
	return
    fi

    # Create flag file to done here
    touch /etc/opensaf/.setup-opensaf-node
    # Enable sqlite3 db configuration in immnd.conf
    sed -e 's/#export IMMSV_PBE_FILE=imm.db/export IMMSV_PBE_FILE=imm.db/' -i /etc/opensaf/immnd.conf

    # Exposed sharefs dir of imm in immnd.conf
    sed s/^export.IMMSV_ROOT_DIRECTORY=.*/"export IMMSV_ROOT_DIRECTORY=\/etc\/opensaf\/sharedfs\/imm"/ -i /etc/opensaf/immnd.conf
    sed s/^export.IMMSV_MAX_WAIT=.*/"export IMMSV_MAX_WAIT=0"/ -i /etc/opensaf/immnd.conf
}

function update_node_dtmd {
    # Update node_type and node_name
    hostname > /etc/opensaf/node_name
    type=`hostname | cut -d "-" -f 1`
    if [ "$type" == "SC" ]; then
        echo "controller" > /etc/opensaf/node_type
    else
        echo "payload" > /etc/opensaf/node_type
    fi

    # Update DTM_NODE_IP in dtmd.conf for TCP mode
    ip=$(ifconfig eth0 | grep -w inet | sed 's/^[ \t]*//' | cut -d' ' -f2)
    sed "s/DTM_NODE_IP=.*/DTM_NODE_IP=${ip}/" -i /etc/opensaf/dtmd.conf
}

function generate_immxml {
    # Generate imm.xml for first time
    if [ ! -f /etc/opensaf/sharedfs/imm/imm.xml ];then
        mkdir -p /etc/opensaf/sharedfs/imm
        cd /usr/local/share/opensaf/immxml
        rm -f imm.xml.*
        ./immxml-clustersize -s 2 -p 2
        ./immxml-configure
        cp imm.xml.* /etc/opensaf/sharedfs/imm/imm.xml
        # Enable Persistent Backend
        sed '/safRdn=immManagement,safApp=safImmService/,/<\/attr>/ { s/2/1/g; }' -i /etc/opensaf/sharedfs/imm/imm.xml
    fi
}

function set_opensaf_user {
    # Make sure permissions are set for non root
    cat /etc/passwd | grep opensaf > /dev/null
    if [ $? -ne 0 ]; then
        groupadd opensaf && \
        useradd -r -g opensaf -d /var/run/opensaf -s /sbin/nologin -c "OpenSAF" opensaf && \
        echo '%{opensaf_user} ALL = NOPASSWD: /sbin/reboot, /sbin/tipc-config, /usr/bin/pkill, /usr/bin/killall' >> /etc/sudoers && \
        echo 'Defaults:%opensaf !requiretty' >> /etc/sudoers && \
        echo 'Defaults:opensaf !requiretty' >> /etc/sudoers
    fi
    chown opensaf:opensaf /var/lib/opensaf
    chown opensaf:opensaf /var/run/opensaf
    chown -R opensaf:opensaf /var/log/opensaf
    chown -R opensaf:opensaf /etc/opensaf
}

function enable_opensafd {
    # Enable automatic start of opensaf via systemd next time container is started
    systemctl enable opensafd

    # Configure dynamic linker run-time bindings
    # see http://man7.org/linux/man-pages/man8/ldconfig.8.html
    ldconfig
}

main() {
    update_node_dtmd
    if [ "$(config_immnd)" == "EXIT" ]; then
        exit 0
    fi
    generate_immxml
    set_opensaf_user
    enable_opensafd
}

main
